pipeline {
    agent any
    environment {
        SONAR_PROJECT_KEY = 'ColasRblr-Group'
        SONAR_HOST_URL = 'https://sonarcloud.io'
        SONAR_TOKEN = credentials('sonarQubeToken')
    }
    stages {
      
                stage('Build') {
                    steps {
                        echo 'Construction du projet:'
                        powershell 'mvn clean package'
                    }
                }
                stage('Test') {
                    steps {
                        echo 'Exécution des tests:'
                        powershell 'mvn test'
                    }
                }
                stage('SonarQube Analysis') {
                    steps {
                        echo 'Analyse SonarQube:'
                        withSonarQubeEnv('SonarQube Scanner') {
                            powershell "mvn sonar:sonar"
                        }
                    }
                }
                stage('Publish SonarQube Results') {
                    steps {
                        echo 'Publication des résultats SonarQube'
                
                        step([$class: 'SonarQubePublisher',
                        reportDirectory: 'target/sonar',
                        reportFile: 'TARGET/sonar-report.json',
                        qualityGateStatus: '${qg.status}'
                    ])
                    }
                }
            }
        
    
    post {
        always {
            junit 'my-reports/test-reports/*.xml'
            archiveArtifacts artifacts: 'my-reports/test-reports/*.xml', allowEmptyArchive: true

            // Publiez les rapports SonarQube
            step([$class: 'HtmlPublisher',
                    allowMissing: false,
                    alwaysLinkToLastBuild: false,
                    keepAll: true,
                    reportDir: 'target/site/sonar',
                    reportFiles: 'index.html',
                    reportName: 'SonarQube Report'
                ])

            // Publiez les rapports de tests
            step([$class: 'HtmlPublisher',
                    allowMissing: false,
                    alwaysLinkToLastBuild: false,
                    keepAll: true,
                    reportDir: 'target/surefire-reports',
                    reportFiles: 'TEST-*.html',
                    reportName: 'Test Reports'
                ])
        }
        success {
            mail to: 'colas.rabiller@gmail.com',
                    subject: 'Build succeeded: ${env.JOB_NAME} [${env.BUILD_NUMBER}]',
                    body: 'Build succeeded: ${env.BUILD_URL}',
                    from: 'jenkins@notification.com'
        }
        failure {
            mail to: 'colas.rabiller@gmail.com',
                    subject: 'Build failed: ${env.JOB_NAME} [${env.BUILD_NUMBER}]',
                    body: 'Build failed: ${env.BUILD_URL}',
                    from: 'jenkins@notification.com'
        }
    }
}
